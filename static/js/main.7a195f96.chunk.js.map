{"version":3,"sources":["components/Statistecs/Statistecs.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["Statistecs","good","neutral","bad","total","set","positivePercentage","FeedbackOptions","onLeaveFeedback","type","name","onClick","Section","title","children","Notification","message","App","state","toSetState","e","setState","prevState","target","countTotalFeedback","this","countPositiveFeedbackPercentage","Math","floor","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQA2BeA,EAzBI,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,IAAUC,GAAgC,EAArCC,IAAqC,EAAhCD,OAAOE,EAAyB,EAAzBA,mBACpD,OACE,gCACE,4CACA,+BACE,6BACE,sCAASL,OAEX,6BACE,yCAAYC,OAEd,6BACE,qCAAQC,OAEV,6BACE,uCAAUC,OAEZ,6BACE,kDAAqBE,EAArB,gBCHKC,EAfS,YAA8B,IAAnBC,EAAkB,EAAlBA,gBACjC,OACE,gCACE,wBAAQC,KAAK,SAASC,KAAK,OAAOC,QAASH,EAA3C,kBAGA,wBAAQC,KAAK,SAASC,KAAK,UAAUC,QAASH,EAA9C,qBAGA,wBAAQC,KAAK,SAASC,KAAK,MAAMC,QAASH,EAA1C,qBCDSI,EARC,YAA8B,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SAChC,OACE,oCACE,6BAAKD,IACJC,MCIQC,EAPM,YAAsB,IAAXC,EAAU,EAAVA,QAC9B,OACE,mCACA,6BAAKA,OCAYC,E,4MACnBC,MAAQ,CACNjB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPgB,WAAa,SAAAC,GACX,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAEG,OAAOb,KAAOY,EAAUF,EAAEG,OAAOb,MAAQ,O,EAIhDc,mBAAqB,WACnB,OAAOC,KAAKP,MAAMjB,KAAOwB,KAAKP,MAAMhB,QAAUuB,KAAKP,MAAMf,K,EAG3DuB,gCAAkC,WAChC,OAAOC,KAAKC,MAAyB,IAAlBH,KAAKP,MAAMjB,KAAcwB,KAAKD,uB,uDAGjD,IAAMpB,EAAQqB,KAAKD,qBACjB,OACA,qCACE,cAAC,EAAD,CAASX,MAAM,wBAAf,SACE,cAAC,EAAD,CAAgBL,gBAAiBiB,KAAKN,eAE7B,IAAVf,EACC,cAAC,EAAD,CAAcY,QAAQ,sBAEtB,cAAC,EAAD,UACE,cAAC,EAAD,CACEf,KAAMwB,KAAKP,MAAMjB,KACjBC,QAASuB,KAAKP,MAAMhB,QACpBC,IAAKsB,KAAKP,MAAMf,IAChBC,MAAOqB,KAAKD,qBACZlB,mBAAoBmB,KAAKC,6C,GAnCNG,aCAjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7a195f96.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Statistecs = ({ good, neutral, bad, set, total, positivePercentage }) => {\r\n  return (\r\n    <div>\r\n      <h2>Statistics</h2>\r\n      <ul>\r\n        <li>\r\n          <p>Good:{good}</p>\r\n        </li>\r\n        <li>\r\n          <p>Neutral:{neutral}</p>\r\n        </li>\r\n        <li>\r\n          <p>Bad:{bad}</p>\r\n        </li>\r\n        <li>\r\n          <p>Total:{total}</p>\r\n        </li>\r\n        <li>\r\n          <p>Positive fedback:{positivePercentage}%</p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistecs;\r\n","import React from 'react';\r\n\r\nconst FeedbackOptions = function ({onLeaveFeedback}) {\r\n  return (\r\n    <div>\r\n      <button type=\"button\" name=\"good\" onClick={onLeaveFeedback}>\r\n        Good\r\n      </button>\r\n      <button type=\"button\" name=\"neutral\" onClick={onLeaveFeedback}>\r\n        Neutral\r\n      </button>\r\n      <button type=\"button\" name=\"bad\" onClick={onLeaveFeedback}>\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\n\r\nconst Section = function ({title, children}) {\r\n  return (\r\n    <section>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\nexport default Section\r\n","import React from 'react';\r\n\r\n\r\nconst Notification = function ({message}) {\r\n  return (\r\n    <>\r\n    <h2>{message}</h2>\r\n    </>\r\n  );\r\n};\r\nexport default Notification","import React, { Component } from 'react';\r\nimport Statistecs from './components/Statistecs/Statistecs.js';\r\nimport FeedbackOption from './components/FeedbackOptions/FeedbackOptions';\r\nimport Section from './components/Section/Section';\r\nimport Notification from './components/Notification/Notification';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n  toSetState = e => {\r\n    this.setState(prevState => ({\r\n      [e.target.name]: prevState[e.target.name] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = function () {\r\n    return this.state.good + this.state.neutral + this.state.bad;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = function () {\r\n    return Math.floor((this.state.good * 100) / this.countTotalFeedback());\r\n  };\r\n  render() {\r\n    const total = this.countTotalFeedback();\r\n      return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOption onLeaveFeedback={this.toSetState} />\r\n        </Section>\r\n        {total === 0 ? (\r\n          <Notification message=\"No feedback given\" />\r\n        ) : (\r\n          <Section>\r\n            <Statistecs\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          </Section>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}